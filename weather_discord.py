import os
import requests
import discord
import time
from dotenv import load_dotenv
from discord.ext import tasks

# Load bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv("bot_discord.env")

TOKEN = os.getenv("DISCORD_TOKEN")
channel_id_str = os.getenv("CHANNEL_ID")
if not channel_id_str:
    raise ValueError("‚ùå Kh√¥ng t√¨m th·∫•y CHANNEL_ID.")
CHANNEL_ID = int(channel_id_str)
WEATHER_API_KEY = os.getenv("OPENWEATHER_API_KEY")

intents = discord.Intents.default()
intents.message_content = True  # Cho ph√©p ƒë·ªçc n·ªôi dung tin nh·∫Øn
client = discord.Client(intents=intents)

# H√†m l·∫•y th·ªùi ti·∫øt
def get_weather():
    url = f"http://api.openweathermap.org/data/2.5/weather?q=Hanoi,vn&appid={WEATHER_API_KEY}&units=metric&lang=vi"
    try:
        res = requests.get(url)
        data = res.json()

        description = data["weather"][0]["description"]
        temp = data["main"]["temp"]
        humidity = data["main"]["humidity"]
        wind = data["wind"]["speed"]

        weather_report = f"""üå§Ô∏è **Th·ªùi ti·∫øt H√† N·ªôi:**
- Tr·∫°ng th√°i: {description.capitalize()}
- Nhi·ªát ƒë·ªô: {temp}¬∞C
- ƒê·ªô ·∫©m: {humidity}%
- Gi√≥: {wind} m/s
"""
        return weather_report
    except Exception as e:
        print("L·ªói khi l·∫•y th·ªùi ti·∫øt:", e)
        return "‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin th·ªùi ti·∫øt."

# G·ª≠i th·ªùi ti·∫øt t·ª± ƒë·ªông l√∫c 7h s√°ng
@client.event
async def on_ready():
    print(f'‚úÖ Bot ƒëang ch·∫°y v·ªõi t√†i kho·∫£n: {client.user}')
    send_weather.start()

@tasks.loop(minutes=1)
async def send_weather():
    now = time.localtime()
    if now.tm_hour == 7 and now.tm_min == 0:
        channel = client.get_channel(CHANNEL_ID)
        if channel:
            report = get_weather()
            await channel.send(report)
        else:
            print("‚ùå Kh√¥ng t√¨m th·∫•y k√™nh!")

# G·ª≠i th·ªùi ti·∫øt khi ng∆∞·ªùi d√πng g√µ !weather
@client.event
async def on_message(message):
    if message.author == client.user:
        return  # Kh√¥ng tr·∫£ l·ªùi ch√≠nh m√¨nh

    if message.content.lower().startswith("!weather"):
        report = get_weather()
        await message.channel.send(report)

client.run(TOKEN)
